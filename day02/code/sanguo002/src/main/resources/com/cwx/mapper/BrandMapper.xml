<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!--namespace:名称空间-->
<mapper namespace="com.cwx.mapper.BrandMapper">

 <!--
        数据库表的字段名称  和  实体类的属性名称 不一样，则不能自动封装数据
            * 起别名：对不一样的列名起别名，让别名和实体类的属性名一样
                * 缺点：每次查询都要定义一次别名
                    * sql片段
                        * 缺点：不灵活
            * resultMap：
                1. 定义<resultMap>标签
                2. 在<select>标签中，使用resultMap属性替换 resultType属性

    -->
    <!--
        id：唯一标识
        type：映射的类型，支持别名
    -->
    
    <resultMap id="brandResultMap" type="brand">
        <!--
            id：完成主键字段的映射
                column：表的列名
                property：实体类的属性名
            result：完成一般字段的映射
                column：表的列名
                property：实体类的属性名
        -->
        <id column="uid" property="序号"/>
        <result column="user_name" property="编号"/>
        <result column="nick_name" property="姓名"/>
        <result column="real_name" property="字"/>
        <result column="sex" property="性别"/>
<!--          <collection property="org_user" ofType="com.cwx.pojo.org_user"> -->
<!--         <result column="id" property="id"/> -->
<!--         <result column="org_id" property="组织id"/> -->
<!--         <result column="uid" property="编号"/> -->
<!--         <result column="type" property="职位"/> -->
<!--         <association property="org" javaType="com.cwx.pojo.org"> -->
<!--             <result column="org_id" property="组织id"/> -->
<!--             <result column="org_name" property="国名"/> -->
<!--         </association> -->
<!--     </collection> -->
    </resultMap>
  
  <select id="selectAll" resultMap="brandResultMap">
select *
from user right JOIN org_user
on user.uid = org_user.uid right JOIN org on org.org_id = org_user.org_id 
where org.org_id=8001 and user.nick_name = '关羽';
  </select>
  
</mapper>


